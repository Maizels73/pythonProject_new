"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Запрашивать у пользователя данные и заполнять список необходимо только числами.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь
сам не остановит работу скрипта, введя, например, команду «stop». При этом скрипт завершается,
сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
 и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class ChekNum(ValueError):
    def __init__(self, num):
        self._num = num

    def __str__(self):
        return f"{self._num} - не число!"


def add_list():
    ad_list = []
    er_list = []
    while True:

        first = input(" ввести значения списка ")
        str_list = first.split()
        for i in str_list:
            if i.lower() == "q":
                return f"Finish List_good = {ad_list}\n er_list = {er_list}"
            else:
                try:
                    if not i.isdigit():
                     raise ChekNum(i)
                    ad_list.append(int(i))
                except ChekNum as ex:
                    er_list.append(i)
                    print(ex)
        print(f" NOW List_good = {ad_list}\n er_list = {er_list}")

print(add_list())
